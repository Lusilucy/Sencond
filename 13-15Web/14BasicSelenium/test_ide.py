# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities


class TestTestmusic():
    def setup_method(self, method):
        self.driver = webdriver.Chrome()
        self.vars = {}

    # def teardown_method(self, method):
    #     self.driver.quit()

    def wait_for_window(self, timeout=2):
        time.sleep(round(timeout / 1000))
        wh_now = self.driver.window_handles
        wh_then = self.vars["window_handles"]
        if len(wh_now) > len(wh_then):
            return set(wh_now).difference(set(wh_then)).pop()

    def test_testmusic(self):
        # Test name: test_music
        # Step # | name | target | value
        # 1 | open | 
        self.driver.get("https://www.baidu.com")
        # 2 | setWindowSize | 1667x984 |
        self.driver.set_window_size(1667, 984)
        # 3 | click | id=kw |
        self.driver.find_element(By.ID, "kw").click()
        # 4 | type | id=kw | 你好音乐
        self.driver.find_element(By.ID, "kw").send_keys("你好音乐")
        # 5 | sendKeys | id=kw | ${KEY_ENTER}
        self.driver.find_element(By.ID, "kw").send_keys(Keys.ENTER)
        # 6 | click | linkText=你好音乐 - 歌曲 |
        self.vars["window_handles"] = self.driver.window_handles

        time.sleep(3)
        # 7 | storeWindowHandle | root |
        self.driver.find_element(By.LINK_TEXT, "你好音乐 - 歌曲").click()
        # 8 | selectWindow | handle=${win9556} |
        self.vars["win9556"] = self.wait_for_window(2000)
        # 9 | click | linkText=播放/暂停 |
        self.vars["root"] = self.driver.current_window_handle
        # 10 | click | linkText=播放/暂停 |
        self.driver.switch_to.window(self.vars["win9556"])
        time.sleep(1)
        # 11 | selectFrame | index=0 |
        self.driver.find_element(By.LINK_TEXT, "播放/暂停").click()
        # # 12 | click | linkText=播放 |
        # self.driver.find_element(By.LINK_TEXT, "播放/暂停").click()
        # # 13 | selectFrame | relative=parent |
        # self.driver.switch_to.frame(0)
        # # 14 | click | linkText=播放/暂停 |
        # self.driver.find_element(By.LINK_TEXT, "播放").click()
        # # 15 | close |  |
        # self.driver.switch_to.default_content()
        # # 16 | selectWindow | handle=${root} |
        # self.driver.find_element(By.LINK_TEXT, "播放/暂停").click()
        # # 17 | close |  |
        # self.driver.close()
        # # 18 | selectWindow | handle=${undefined} |
        # self.driver.switch_to.window(self.vars["root"])
        # self.driver.close()
        # # self.driver.switch_to.window(self.vars["undefined"])
